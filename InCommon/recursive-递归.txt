一、概述
	递归一般来说是指有穷递归，即有出口的递归。递归函数中的体现为，函数中调用自身，
	当满足条件是返回。
	
二、详细说明
	1.递归就是方法中调用自身；
	2.递归中必须有一个明确的递归结束条件，即递归出口；
	3.递归过程中，系统为每一层的返回点、局部变量等开辟栈来存储；
	
	程序从递归入口进入，开始递归过程，当满足条件时调用自身进入下一层的入口，如此循环。当到达最后一层时，
	给出返回值，将值返回给上一层调用，如此直到顶层收到返回值。顶层递归完成函数剩余功能并进入出口，将值返
	回给最终的调用者。
	
三、递归算法(Python实现)
	3.1卖鸭子
	def sellDuck(sum, n):
		'\t一个人赶着鸭子去每个村庄卖，每经过一个村子卖去所赶鸭子的一半又一只。这样他经过了七个\n\
		村子后还剩两只鸭子，问他出发时共赶多少只鸭子？经过每个村子卖出多少只鸭子\n\
		题目分析:\n\
		递归终止的条件是当达到第7个村庄时递归停止，设经过的村庄数为n则有剩余的鸭子为总数为每次\n\
		剩余的鸭子数位sum = sum-(sum/2+1)\n\
		算法构造：当 n=7 时 sum = 2;当 0<n<7 时 sum =2*m+2;\n'
		if n > 0:
			tmp = (sum+1)*2
			print '到第',n,'个村子的时候有',(sum+1)*2,'只鸭子'
			print '第',n,'个村庄卖出',sum+2 ,'只鸭子'
			print '离开第', n, '个村子的时候剩', (sum + 1)*2-(sum+2), '只鸭子'
			print '==================================='
			return sellDuck((sum+1)*2, n-1)
		else:
			return sum

	# print sellDuck(2, 7)

	3.2角谷定理
	def jiaoGu(x):
		'\t角谷定理。输入一个自然数，若为偶数，则把它除以2，若为奇数，则把\n\
		它乘以3加1。经过如此有限次运算后，总可以得到自然数值1。求经过多少\n\
		次可得到自然数1。\n\
		算法分析：\n\
		递归的终止条件是最后值为1；设输入的值为n先进项判断，若 n = 1\
		则输出n;\n\
		若n不为1；则对他进行偶数判断，若为偶数除2，若为奇数则乘3加1；然后\
		在进行偶数判断，直到n = 1\n\
		为止；\n\
		算法构造\n\
		n = 1时 输出n；n != 1时 偶数判断 偶数= n / 2;若是奇数n = 3 * n + 1'
		if (x is not 1) and (x >0 or x == 0):
			if (x%2) == 0:
				print(x/2)
				return jiaoGu(x/2)
			else:
				print(x*3+1)
				return jiaoGu(x*3+1)
		else:
			return
			
	3.3抱着我的小鲤鱼
	def Recursion(depth):
		print('抱着')
		if depth == 0:
			print('我的小鲤鱼')
		else:
			Recursion(depth-1)
		print('的我')

	#print('吓得我抱起了')
	#Recursion(1)
	
	